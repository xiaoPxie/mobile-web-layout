@charset "UTF-8";

/* 移动端页面设计稿宽度 */
$design-width: 720;
/* 移动端页面设计稿dpr基准值 */
$design-dpr: 2;
/* 将移动端页面分为10块 */
$blocks: 10;
/* 缩放所支持的设备最小宽度 */
$min-device-width: 320px;
/* 缩放所支持的设备最大宽度 */
$max-device-width: 540px;

/*
    rem与px对应关系，1rem代表在JS中设置的html font-size值（为一块的宽度），$rem即为$px对应占多少块

        $px                    $rem
    -------------    ===    ------------
    $design-width              $blocks
*/

/* 单位px转化为rem */
@function px2rem($px) {
    @return #{$px / $design-width * $blocks}rem;
}

/* 单位rem转化为px，可用于根据rem单位快速计算原px */
@function rem2px($rem) {
    @return #{$rem / $blocks * $design-width}px;
}

/* html根的宽度定义 */
@mixin root-width() {
    body {
        @include container-min-width();
        /* 在body中添加data-content-max属性，以限定最大的宽度 ，两边留空白的布局*/
        &[data-content-max] {
            @include container-max-width();
        }
    }

    /* 某些机型虽然设备dpr大于1，但识别不了scale缩放，这里需要重新设置最小宽度防止出现横向滚动条 */
    &[data-dpr="1"] body {
        min-width: $min-device-width;
    }
}

/* 设置容器拉伸的最小宽度 */
@mixin container-min-width() {
    margin-right: auto;
    margin-left: auto;
    min-width: $min-device-width;

    @media (-webkit-device-pixel-ratio: 2) {
        min-width: $min-device-width * 2;
    }
    @media (-webkit-device-pixel-ratio: 2.5) {
        min-width: $min-device-width * 2.5;
    }
    @media (-webkit-device-pixel-ratio: 2.75) {
        min-width: $min-device-width * 2.75;
    }

    @media (-webkit-device-pixel-ratio: 3) {
        min-width: $min-device-width * 3;
    }
    @media (-webkit-device-pixel-ratio: 4) {
        min-width: $min-device-width * 4;
    }
}

/* 设置容器拉伸的最大宽度 */
@mixin container-max-width() {
    margin-right: auto;
    margin-left: auto;
    max-width: $max-device-width;

    @media (-webkit-device-pixel-ratio: 2) {
        max-width: $max-device-width * 2;
    }
    @media (-webkit-device-pixel-ratio: 2.5) {
        max-width: $max-device-width * 2.5;
    }
    @media (-webkit-device-pixel-ratio: 2.75) {
        max-width: $max-device-width * 2.75;
    }
    @media (-webkit-device-pixel-ratio: 3) {
        max-width: $max-device-width * 3;
    }
    @media (-webkit-device-pixel-ratio: 4) {
        max-width: $max-device-width * 4;
    }
}

/* 固定值大小，不使用rem单位， 根据dpr值分段调整 */
@mixin fixed-size($class-name, $size) {
    #{$class-name}: $size / $design-dpr;

    [data-dpr="2"] & {
        #{$class-name}: $size / $design-dpr * 2;
    }
    // for mx3
    [data-dpr="2.5"] & {
        #{$class-name}: $size / $design-dpr * 2.5;
    }
    // for 小米note
    [data-dpr="2.75"] & {
        #{$class-name}: $size / $design-dpr * 2.75;
    }
    [data-dpr="3"] & {
        #{$class-name}: $size / $design-dpr * 3;
    }
    // for 三星note4
    [data-dpr="4"] & {
        #{$class-name}: $size / $design-dpr * 4;
    }
}

// 简写class-name，根据设定的dpr取固定px值
$dpr-list: (1 2 2.5 2.75 3 4);
@mixin complex-fix-size($class-name, $value-list) {
    @for $i from 1 through length($dpr-list) {
        $list: ();
        $dpr-item: nth($dpr-list, $i);
        @for $j from 1 through length($value-list) {
            $value-item: nth($value-list, $j);
            //是数值则根据dpr计算出px值
            @if type_of($value-item) == number {
                $list: append($list, $value-item / $design-dpr * $dpr-item);
            }
            @else {
                $list: append($list, $value-item);
            }
        }
        //
        [data-dpr="#{$dpr-item}"] & {
            #{$class-name}: $list;
        }
    }
}
